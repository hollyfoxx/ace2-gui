name: Build and Test

# Runs only when there is a pull request against the main branch
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# All of the jobs run in parallel, but each step within a job is sequential
jobs:
  backend:
    name: Backend Tests  
    runs-on: ubuntu-latest
    
    env:
      POSTGRES_DB: ace
      POSTGRES_USER: ace
      POSTGRES_PASSWORD: supersecret
      DATABASE_URL: postgresql://ace:supersecret@db:5432/ace

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
            
      - name: Build backend
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          push: false
          tags: aceecosystem/ace2-gui-backend:latest
          builder: ${{ steps.buildx.outputs.name }}
          file: ./backend/Dockerfile
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
        
#       - name: Build
#         run: docker-compose build backend
          
      - name: Test
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
        run: docker-compose run -e TESTING=1 backend pytest -vv

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Build
        run: docker-compose build frontend
          
      - name: Lint
        run: docker-compose run frontend npm run lint
        
      - name: Unit tests
        run: docker-compose run frontend npm run test:unit
        
#       - name: End to end tests
#         run: docker-compose run frontend npm run test:e2e
